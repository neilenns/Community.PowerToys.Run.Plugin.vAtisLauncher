name: "Build and Zip Application"
description: "Builds the application, zips the output, and runs a linter."
inputs:
  version:
    description: "Version of the application"
    required: true
  architecture:
    description: "Architecture to build for"
    required: true

outputs:
  zipFile:
    description: "The path to the zip file"
    value: ${{ steps.zip-output.outputs.zipFile }}

runs:
  using: "composite"
  steps:
    - name: Extract env from files
      uses: ./.github/actions/env-from-source
      with:
        manifest-file: ./src/plugin.json
        manifest-paths: |
          Name
        project-file: ./src/${{ github.event.repository.name }}.csproj
        project-paths: |
          /Project/PropertyGroup/TargetFramework

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: "9.0.x"

    - name: Install linter
      shell: pwsh
      run: |
        dotnet tool install --global Community.PowerToys.Run.Plugin.Lint --version 0.4.0

    - name: Set version in plugin.json
      uses: tnikFi/json-file-transform@v1
      with:
        files: "src/plugin.json"
        key-value-pairs: |
          Version=${{ inputs.version }}

    - name: Build the application for ${{ inputs.architecture }}
      shell: pwsh
      run: |
        dotnet publish .\src\${{ github.event.repository.name }}.csproj -c Release /p:PublishProfile=${{ inputs.architecture }}

    - name: Clean and Zip the build output
      id: zip-output
      shell: pwsh
      run: |
        $zipPath = "./${{ github.event.repository.name }}-${{ inputs.version }}-${{ inputs.architecture }}.zip"
        Remove-Item -Recurse "./src/bin/${{ inputs.architecture }}/Release/${{ env.TargetFramework }}/${{ env.NAME }}/runtimes"
        Remove-Item "./src/bin/${{ inputs.architecture }}/Release/${{ env.TargetFramework }}/${{ env.NAME }}/PowerToys.*"
        Remove-Item "./src/bin/${{ inputs.architecture }}/Release/${{ env.TargetFramework }}/${{ env.NAME }}/Wox.*"
        Remove-Item "./src/bin/${{ inputs.architecture }}/Release/${{ env.TargetFramework }}/${{ env.NAME }}/*.xml"
        Remove-Item "./src/bin/${{ inputs.architecture }}/Release/${{ env.TargetFramework }}/${{ env.NAME }}/Microsoft.Windows.SDK.NET.dll"   
        Compress-Archive -Path "./src/bin/${{ inputs.architecture }}/Release/${{ env.TargetFramework }}/${{ env.NAME }}" -DestinationPath "$zipPath"
        echo "zipFile=$zipPath" >> $env:GITHUB_OUTPUT

    - name: Lint
      shell: pwsh
      run: |
        ptrun-lint "${{ steps.zip-output.outputs.zipFile }}"
